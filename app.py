from flask import Flask

app = Flask(__name__)


@app.route('/')
def hello():
    return "<h1>Здравствуй flask </h1> <p>Вторая строчка</p> <table border='1px solid black'> " \
           "<tr><th>Фамилия</th><th>Имя</th></tr></th></th><tr><th>Путин</th><th>Владимир</th></tr></table> "


@app.route('/hello')
def greeting():
    return "<h1>Привет Коля </h1> <p>Вторая строчка</p> <table border='1px solid black'> " \
           "<tr><th>Фамилия</th><th>Имя</th></tr></th></th><tr><th>Путин</th><th>Владимир</th></tr></table> "


@app.route('/1page')
def greeting1():
    return "<b><font<size=24>GitHub</font></b>" "<hr></hr>" \
            "<em>GitHub — крупнейший веб-сервис для хостинга IT-проектов и их совместной разработки. Веб-сервис " \
           "основан на системе контроля версий Git и разработан на Ruby on Rails и Erlang компанией GitHub, " \
           "Inc (ранее Logical Awesome). Сервис бесплатен для проектов с открытым исходным кодом и (с 2019 года) " \
           "небольших частных проектов, предоставляя им все возможности (включая SSL), а для крупных корпоративных " \
           "проектов предлагаются различные платные тарифные планы.Слоган сервиса — «Social Coding» — на русский " \
           "можно перевести как «Пишем код вместе». На футболках же печатают совсем другую фразу: «Fork you!» (" \
           "«Ветвить тебя!»). С одной стороны, она созвучна с англоязычным ругательством и намекает на " \
           "неформальную атмосферу. С другой, эти слова напоминают, что создавать новые форки с Git можно легко и " \
           "безболезненно — традиционно, к созданию веток разработчики проектов с открытым исходным кодом относятся " \
           "негативно — а также созвучна названию одной из возможностей GitHub — очереди форков</em> "


@app.route('/2page')
def greeting4():
    return "<h2><center>История языка питон</center></h2>" \
           "<p>Python (МФА: [ˈpʌɪθ(ə)n]; в русском языке встречаются названия пито́н или па́йтон) — " \
           "высокоуровневый язык программирования общего назначения с динамической строгой типизацией и " \
           "автоматическим управлением памятью, ориентированный на повышение производительности разработчика, "\
           "читаемости кода и его качества, а также на обеспечение переносимости написанных на нём программ. Язык "\
           "является полностью объектно-ориентированным в том плане, что всё является объектами. Необычной " \
           "особенностью языка является выделение блоков кода пробельными отступами. Синтаксис ядра языка " \
           "минималистичен, за счёт чего на практике редко возникает необходимость обращаться к документации. Сам "\
           "же язык известен как интерпретируемый и используется в том числе для написания скриптов. Недостатками "\
           "языка являются зачастую более низкая скорость работы и более высокое потребление памяти написанных на нём "\
           "программ по сравнению с аналогичным кодом, написанным на компилируемых языках, таких как C или C++</p> "


if __name__ == '__main__':
    app.run(debug=True)
